# coding: utf-8

"""
    GitLab API

    An OpenAPI definition for the GitLab REST API. Few API resources or endpoints are currently included. The intent is to expand this to match the entire Markdown documentation of the API: <https://docs.gitlab.com/ee/api/>. Contributions are welcome.  When viewing this on gitlab.com, you can test API calls directly from the browser against the `gitlab.com` instance, if you are logged in. The feature uses the current [GitLab session cookie](https://docs.gitlab.com/ee/api/index.html#session-cookie), so each request is made using your account.  Instructions for using this tool can be found in [Interactive API Documentation](https://docs.gitlab.com/ee/api/openapi/openapi_interactive.html) 

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictBytes, StrictStr
from typing import Optional, Union
from typing_extensions import Annotated
from openapi_client.models.api_entities_appearance import APIEntitiesAppearance

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ApplicationApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_api_v4_application_appearance(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> APIEntitiesAppearance:
        """get_api_v4_application_appearance

        Get the current appearance

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_api_v4_application_appearance_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "APIEntitiesAppearance",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_api_v4_application_appearance_with_http_info(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[APIEntitiesAppearance]:
        """get_api_v4_application_appearance

        Get the current appearance

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_api_v4_application_appearance_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "APIEntitiesAppearance",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_api_v4_application_appearance_without_preload_content(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """get_api_v4_application_appearance

        Get the current appearance

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_api_v4_application_appearance_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "APIEntitiesAppearance",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_api_v4_application_appearance_serialize(
        self,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/application/appearance',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def put_api_v4_application_appearance(
        self,
        title: Annotated[Optional[StrictStr], Field(description="Instance title on the sign in / sign up page")] = None,
        description: Annotated[Optional[StrictStr], Field(description="Markdown text shown on the sign in / sign up page")] = None,
        pwa_name: Annotated[Optional[StrictStr], Field(description="Name of the Progressive Web App")] = None,
        pwa_short_name: Annotated[Optional[StrictStr], Field(description="Optional, short name for Progressive Web App")] = None,
        pwa_description: Annotated[Optional[StrictStr], Field(description="An explanation of what the Progressive Web App does")] = None,
        logo: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Instance image used on the sign in / sign up page")] = None,
        pwa_icon: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Icon used for Progressive Web App")] = None,
        header_logo: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Instance image used for the main navigation bar")] = None,
        favicon: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Instance favicon in .ico/.png format")] = None,
        new_project_guidelines: Annotated[Optional[StrictStr], Field(description="Markdown text shown on the new project page")] = None,
        profile_image_guidelines: Annotated[Optional[StrictStr], Field(description="Markdown text shown on the profile page below Public Avatar")] = None,
        header_message: Annotated[Optional[StrictStr], Field(description="Message within the system header bar")] = None,
        footer_message: Annotated[Optional[StrictStr], Field(description="Message within the system footer bar")] = None,
        message_background_color: Annotated[Optional[StrictStr], Field(description="Background color for the system header / footer bar")] = None,
        message_font_color: Annotated[Optional[StrictStr], Field(description="Font color for the system header / footer bar")] = None,
        email_header_and_footer_enabled: Annotated[Optional[StrictBool], Field(description="Add header and footer to all outgoing emails if enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> APIEntitiesAppearance:
        """put_api_v4_application_appearance

        Modify appearance

        :param title: Instance title on the sign in / sign up page
        :type title: str
        :param description: Markdown text shown on the sign in / sign up page
        :type description: str
        :param pwa_name: Name of the Progressive Web App
        :type pwa_name: str
        :param pwa_short_name: Optional, short name for Progressive Web App
        :type pwa_short_name: str
        :param pwa_description: An explanation of what the Progressive Web App does
        :type pwa_description: str
        :param logo: Instance image used on the sign in / sign up page
        :type logo: bytearray
        :param pwa_icon: Icon used for Progressive Web App
        :type pwa_icon: bytearray
        :param header_logo: Instance image used for the main navigation bar
        :type header_logo: bytearray
        :param favicon: Instance favicon in .ico/.png format
        :type favicon: bytearray
        :param new_project_guidelines: Markdown text shown on the new project page
        :type new_project_guidelines: str
        :param profile_image_guidelines: Markdown text shown on the profile page below Public Avatar
        :type profile_image_guidelines: str
        :param header_message: Message within the system header bar
        :type header_message: str
        :param footer_message: Message within the system footer bar
        :type footer_message: str
        :param message_background_color: Background color for the system header / footer bar
        :type message_background_color: str
        :param message_font_color: Font color for the system header / footer bar
        :type message_font_color: str
        :param email_header_and_footer_enabled: Add header and footer to all outgoing emails if enabled
        :type email_header_and_footer_enabled: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._put_api_v4_application_appearance_serialize(
            title=title,
            description=description,
            pwa_name=pwa_name,
            pwa_short_name=pwa_short_name,
            pwa_description=pwa_description,
            logo=logo,
            pwa_icon=pwa_icon,
            header_logo=header_logo,
            favicon=favicon,
            new_project_guidelines=new_project_guidelines,
            profile_image_guidelines=profile_image_guidelines,
            header_message=header_message,
            footer_message=footer_message,
            message_background_color=message_background_color,
            message_font_color=message_font_color,
            email_header_and_footer_enabled=email_header_and_footer_enabled,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "APIEntitiesAppearance",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def put_api_v4_application_appearance_with_http_info(
        self,
        title: Annotated[Optional[StrictStr], Field(description="Instance title on the sign in / sign up page")] = None,
        description: Annotated[Optional[StrictStr], Field(description="Markdown text shown on the sign in / sign up page")] = None,
        pwa_name: Annotated[Optional[StrictStr], Field(description="Name of the Progressive Web App")] = None,
        pwa_short_name: Annotated[Optional[StrictStr], Field(description="Optional, short name for Progressive Web App")] = None,
        pwa_description: Annotated[Optional[StrictStr], Field(description="An explanation of what the Progressive Web App does")] = None,
        logo: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Instance image used on the sign in / sign up page")] = None,
        pwa_icon: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Icon used for Progressive Web App")] = None,
        header_logo: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Instance image used for the main navigation bar")] = None,
        favicon: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Instance favicon in .ico/.png format")] = None,
        new_project_guidelines: Annotated[Optional[StrictStr], Field(description="Markdown text shown on the new project page")] = None,
        profile_image_guidelines: Annotated[Optional[StrictStr], Field(description="Markdown text shown on the profile page below Public Avatar")] = None,
        header_message: Annotated[Optional[StrictStr], Field(description="Message within the system header bar")] = None,
        footer_message: Annotated[Optional[StrictStr], Field(description="Message within the system footer bar")] = None,
        message_background_color: Annotated[Optional[StrictStr], Field(description="Background color for the system header / footer bar")] = None,
        message_font_color: Annotated[Optional[StrictStr], Field(description="Font color for the system header / footer bar")] = None,
        email_header_and_footer_enabled: Annotated[Optional[StrictBool], Field(description="Add header and footer to all outgoing emails if enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[APIEntitiesAppearance]:
        """put_api_v4_application_appearance

        Modify appearance

        :param title: Instance title on the sign in / sign up page
        :type title: str
        :param description: Markdown text shown on the sign in / sign up page
        :type description: str
        :param pwa_name: Name of the Progressive Web App
        :type pwa_name: str
        :param pwa_short_name: Optional, short name for Progressive Web App
        :type pwa_short_name: str
        :param pwa_description: An explanation of what the Progressive Web App does
        :type pwa_description: str
        :param logo: Instance image used on the sign in / sign up page
        :type logo: bytearray
        :param pwa_icon: Icon used for Progressive Web App
        :type pwa_icon: bytearray
        :param header_logo: Instance image used for the main navigation bar
        :type header_logo: bytearray
        :param favicon: Instance favicon in .ico/.png format
        :type favicon: bytearray
        :param new_project_guidelines: Markdown text shown on the new project page
        :type new_project_guidelines: str
        :param profile_image_guidelines: Markdown text shown on the profile page below Public Avatar
        :type profile_image_guidelines: str
        :param header_message: Message within the system header bar
        :type header_message: str
        :param footer_message: Message within the system footer bar
        :type footer_message: str
        :param message_background_color: Background color for the system header / footer bar
        :type message_background_color: str
        :param message_font_color: Font color for the system header / footer bar
        :type message_font_color: str
        :param email_header_and_footer_enabled: Add header and footer to all outgoing emails if enabled
        :type email_header_and_footer_enabled: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._put_api_v4_application_appearance_serialize(
            title=title,
            description=description,
            pwa_name=pwa_name,
            pwa_short_name=pwa_short_name,
            pwa_description=pwa_description,
            logo=logo,
            pwa_icon=pwa_icon,
            header_logo=header_logo,
            favicon=favicon,
            new_project_guidelines=new_project_guidelines,
            profile_image_guidelines=profile_image_guidelines,
            header_message=header_message,
            footer_message=footer_message,
            message_background_color=message_background_color,
            message_font_color=message_font_color,
            email_header_and_footer_enabled=email_header_and_footer_enabled,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "APIEntitiesAppearance",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def put_api_v4_application_appearance_without_preload_content(
        self,
        title: Annotated[Optional[StrictStr], Field(description="Instance title on the sign in / sign up page")] = None,
        description: Annotated[Optional[StrictStr], Field(description="Markdown text shown on the sign in / sign up page")] = None,
        pwa_name: Annotated[Optional[StrictStr], Field(description="Name of the Progressive Web App")] = None,
        pwa_short_name: Annotated[Optional[StrictStr], Field(description="Optional, short name for Progressive Web App")] = None,
        pwa_description: Annotated[Optional[StrictStr], Field(description="An explanation of what the Progressive Web App does")] = None,
        logo: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Instance image used on the sign in / sign up page")] = None,
        pwa_icon: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Icon used for Progressive Web App")] = None,
        header_logo: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Instance image used for the main navigation bar")] = None,
        favicon: Annotated[Optional[Union[StrictBytes, StrictStr]], Field(description="Instance favicon in .ico/.png format")] = None,
        new_project_guidelines: Annotated[Optional[StrictStr], Field(description="Markdown text shown on the new project page")] = None,
        profile_image_guidelines: Annotated[Optional[StrictStr], Field(description="Markdown text shown on the profile page below Public Avatar")] = None,
        header_message: Annotated[Optional[StrictStr], Field(description="Message within the system header bar")] = None,
        footer_message: Annotated[Optional[StrictStr], Field(description="Message within the system footer bar")] = None,
        message_background_color: Annotated[Optional[StrictStr], Field(description="Background color for the system header / footer bar")] = None,
        message_font_color: Annotated[Optional[StrictStr], Field(description="Font color for the system header / footer bar")] = None,
        email_header_and_footer_enabled: Annotated[Optional[StrictBool], Field(description="Add header and footer to all outgoing emails if enabled")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """put_api_v4_application_appearance

        Modify appearance

        :param title: Instance title on the sign in / sign up page
        :type title: str
        :param description: Markdown text shown on the sign in / sign up page
        :type description: str
        :param pwa_name: Name of the Progressive Web App
        :type pwa_name: str
        :param pwa_short_name: Optional, short name for Progressive Web App
        :type pwa_short_name: str
        :param pwa_description: An explanation of what the Progressive Web App does
        :type pwa_description: str
        :param logo: Instance image used on the sign in / sign up page
        :type logo: bytearray
        :param pwa_icon: Icon used for Progressive Web App
        :type pwa_icon: bytearray
        :param header_logo: Instance image used for the main navigation bar
        :type header_logo: bytearray
        :param favicon: Instance favicon in .ico/.png format
        :type favicon: bytearray
        :param new_project_guidelines: Markdown text shown on the new project page
        :type new_project_guidelines: str
        :param profile_image_guidelines: Markdown text shown on the profile page below Public Avatar
        :type profile_image_guidelines: str
        :param header_message: Message within the system header bar
        :type header_message: str
        :param footer_message: Message within the system footer bar
        :type footer_message: str
        :param message_background_color: Background color for the system header / footer bar
        :type message_background_color: str
        :param message_font_color: Font color for the system header / footer bar
        :type message_font_color: str
        :param email_header_and_footer_enabled: Add header and footer to all outgoing emails if enabled
        :type email_header_and_footer_enabled: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._put_api_v4_application_appearance_serialize(
            title=title,
            description=description,
            pwa_name=pwa_name,
            pwa_short_name=pwa_short_name,
            pwa_description=pwa_description,
            logo=logo,
            pwa_icon=pwa_icon,
            header_logo=header_logo,
            favicon=favicon,
            new_project_guidelines=new_project_guidelines,
            profile_image_guidelines=profile_image_guidelines,
            header_message=header_message,
            footer_message=footer_message,
            message_background_color=message_background_color,
            message_font_color=message_font_color,
            email_header_and_footer_enabled=email_header_and_footer_enabled,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "APIEntitiesAppearance",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _put_api_v4_application_appearance_serialize(
        self,
        title,
        description,
        pwa_name,
        pwa_short_name,
        pwa_description,
        logo,
        pwa_icon,
        header_logo,
        favicon,
        new_project_guidelines,
        profile_image_guidelines,
        header_message,
        footer_message,
        message_background_color,
        message_font_color,
        email_header_and_footer_enabled,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        if title is not None:
            _form_params.append(('title', title))
        if description is not None:
            _form_params.append(('description', description))
        if pwa_name is not None:
            _form_params.append(('pwa_name', pwa_name))
        if pwa_short_name is not None:
            _form_params.append(('pwa_short_name', pwa_short_name))
        if pwa_description is not None:
            _form_params.append(('pwa_description', pwa_description))
        if logo is not None:
            _files['logo'] = logo
        if pwa_icon is not None:
            _files['pwa_icon'] = pwa_icon
        if header_logo is not None:
            _files['header_logo'] = header_logo
        if favicon is not None:
            _files['favicon'] = favicon
        if new_project_guidelines is not None:
            _form_params.append(('new_project_guidelines', new_project_guidelines))
        if profile_image_guidelines is not None:
            _form_params.append(('profile_image_guidelines', profile_image_guidelines))
        if header_message is not None:
            _form_params.append(('header_message', header_message))
        if footer_message is not None:
            _form_params.append(('footer_message', footer_message))
        if message_background_color is not None:
            _form_params.append(('message_background_color', message_background_color))
        if message_font_color is not None:
            _form_params.append(('message_font_color', message_font_color))
        if email_header_and_footer_enabled is not None:
            _form_params.append(('email_header_and_footer_enabled', email_header_and_footer_enabled))
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'multipart/form-data'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'ApiKeyAuth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/application/appearance',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


